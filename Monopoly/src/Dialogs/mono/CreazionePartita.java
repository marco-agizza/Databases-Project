package Dialogs.mono;


import Panels.mono.RegistraPlayers;
import java.awt.BorderLayout;
import java.awt.Window;
import javax.swing.JOptionPane;
import java.sql.*;
import java.sql.SQLException;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;


public class CreazionePartita extends javax.swing.JDialog {
    Connection myconObj=null;
    Statement mystatObj=null;
    ResultSet myresObj=null;

    /**
     * Creates new form CreazionePartita
     */
    public CreazionePartita(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.NumPlayersBox.requestFocus();
    }
    private void impostaDefault() {
      getRootPane().setDefaultButton(CreateButton);
   }
    public static JPanel newPane(String labelText) {
        RegistraPlayers pane= new RegistraPlayers();
        return pane;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jRadioButton1 = new javax.swing.JRadioButton();
        Ped3 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        NumPlayersBox = new javax.swing.JComboBox<>();
        Label1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        Label3 = new javax.swing.JLabel();
        Label4 = new javax.swing.JLabel();
        Label5 = new javax.swing.JLabel();
        TextField1 = new javax.swing.JTextField();
        TextField2 = new javax.swing.JTextField();
        TextField3 = new javax.swing.JTextField();
        TextField4 = new javax.swing.JTextField();
        TextField5 = new javax.swing.JTextField();
        RegisterButton = new javax.swing.JButton();
        CreateButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        TextField6 = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        TextField0 = new javax.swing.JTextField();
        Registratore = new javax.swing.JInternalFrame();
        Ped1 = new javax.swing.JComboBox<>();
        Ped2 = new javax.swing.JComboBox<>();
        Ped4 = new javax.swing.JComboBox<>();
        Ped5 = new javax.swing.JComboBox<>();
        Ped6 = new javax.swing.JComboBox<>();
        Ped7 = new javax.swing.JComboBox<>();

        jRadioButton1.setText("jRadioButton1");

        Ped3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Candela", "Fiasco", "Fungo", "Mela", "Pera", "Pianta", " " }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Creazione Partita");

        jLabel1.setText("numero giocatori:");

        NumPlayersBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " 2", " 3", " 4", " 5", " 6" }));
        NumPlayersBox.setToolTipText("");
        NumPlayersBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumPlayersBoxActionPerformed(evt);
            }
        });

        Label1.setText("Giocatore1");

        label2.setText("Giocatore2");

        Label3.setText("Giocatore3");

        Label4.setText("Giocatore4");

        Label5.setText("Giocatore5");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, TextField4, org.jdesktop.beansbinding.ELProperty.create("${editable}"), TextField3, org.jdesktop.beansbinding.BeanProperty.create("editable"), "boh1");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, TextField4, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), TextField3, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, TextField5, org.jdesktop.beansbinding.ELProperty.create("${editable}"), TextField4, org.jdesktop.beansbinding.BeanProperty.create("editable"), "boh2");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, TextField5, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), TextField4, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, TextField6, org.jdesktop.beansbinding.ELProperty.create("${editable}"), TextField5, org.jdesktop.beansbinding.BeanProperty.create("editable"), "boh3");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, TextField6, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), TextField5, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        RegisterButton.setText("Registra");
        RegisterButton.setToolTipText("Clicca per registrare un nuovo giocatore");
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });

        CreateButton.setText("Crea!");
        CreateButton.setToolTipText("");
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Giocatore6");

        TextField6.setEditable(false);
        TextField6.setEnabled(false);

        okButton.setText("ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("ID partita:");

        TextField0.setToolTipText("un numero");

        Registratore.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        Registratore.setTitle("Registrazione nuovo giocatore");
        Registratore.setVisible(false);

        javax.swing.GroupLayout RegistratoreLayout = new javax.swing.GroupLayout(Registratore.getContentPane());
        Registratore.getContentPane().setLayout(RegistratoreLayout);
        RegistratoreLayout.setHorizontalGroup(
            RegistratoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        RegistratoreLayout.setVerticalGroup(
            RegistratoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        Ped1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Candela", "Fiasco", "Fungo", "Mela", "Pera", "Pianta", " " }));

        Ped2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Candela", "Fiasco", "Fungo", "Mela", "Pera", "Pianta", " " }));

        Ped4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Candela", "Fiasco", "Fungo", "Mela", "Pera", "Pianta" }));
        Ped4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ped4ActionPerformed(evt);
            }
        });

        Ped5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Candela", "Fiasco", "Fungo", "Mela", "Pera", "Pianta", " " }));

        Ped6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Candela", "Fiasco", "Fungo", "Mela", "Pera", "Pianta", " " }));

        Ped7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Candela", "Fiasco", "Fungo", "Mela", "Pera", "Pianta", " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(TextField0, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addComponent(RegisterButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CreateButton))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(Label3)
                                .addComponent(Label5)
                                .addComponent(Label4)
                                .addComponent(label2)
                                .addComponent(Label1)
                                .addComponent(jLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(NumPlayersBox, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(okButton))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(TextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Ped5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(TextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Ped6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(TextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Ped7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(TextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(TextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Ped1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Ped2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Ped4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Registratore, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Registratore, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(NumPlayersBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(okButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(TextField0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Ped1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Label1))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label2)
                            .addComponent(TextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Ped2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Label3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Ped4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Label4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Ped5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Label5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Ped6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Ped7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RegisterButton)
                            .addComponent(CreateButton))))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NumPlayersBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumPlayersBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumPlayersBoxActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        String numero;
        TextField3.setEditable(false);
        TextField4.setEditable(false);
        TextField5.setEditable(false);
        TextField6.setEditable(false);
        TextField3.setEnabled(false);
        TextField4.setEnabled(false);
        TextField5.setEnabled(false);
        TextField6.setEnabled(false);
        numero=NumPlayersBox.getSelectedItem().toString();
        System.out.println(numero);
        if(numero==" 2"){
            TextField3.setText("");
        }
        if(numero==" 3"){
            TextField3.setEditable(true);
            TextField3.setEnabled(true);
            TextField4.setText("");
            TextField5.setText("");
        }
        if(numero==" 4"){
            TextField4.setEditable(true);
            TextField4.setEnabled(true);
            TextField5.setText("");
            TextField6.setText("");
        }
        if(numero==" 5"){
            TextField5.setEditable(true);
            TextField5.setEnabled(true);
            TextField6.setText("");
        }
        if(numero==" 6"){
            TextField6.setEditable(true);
            TextField6.setEnabled(true);
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        String numero=NumPlayersBox.getSelectedItem().toString();
        int conto=0;
        int esistegia=0;
        //Controllo in un primo momento che tutti i text field sbloccati siano stati utilizzati
        if(numero==" 2"){
            if(TextField1.getText().trim().isEmpty() || TextField2.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this,"Inserire gli username di tutti i giocatori");
            }else{
                //Controllo che gli username digitati sono diversi
                if(TextField1.getText().equals(TextField2.getText())){
                    //avvisa che gli username dei partecipanti della partita devono essere diversi
                    System.out.println("i text field contengono username uguali !");
                    JOptionPane.showMessageDialog(this, "usare username diversi per diversi giocatori");
                    
                }else{
                    //controllo se il loro contenuto è valido (presente nella tabella giocatori)
                    System.out.println("i text field contengono username diversi !");
                    try{
                        myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
                        mystatObj=myconObj.createStatement();
                        myresObj=mystatObj.executeQuery("Select count(Username) as conto From Giocatore where username='"+TextField1.getText()+"' or username='"+TextField2.getText()+"'");
                        //leggo il risultato
                        while(myresObj.next()){
                            conto=myresObj.getInt("conto");
                        }
                        if(conto!=2){
                            JOptionPane.showMessageDialog(this, "Ci sono giocatori non registrati, provvedere");
                        }else{
                            //Controllo che non esiste già una partita con l' id inserito nella pagina corrente
                            Statement mystatObj1= myconObj.createStatement();
                            ResultSet mynewresObj=mystatObj1.executeQuery("Select IDPartita From Partita");
                            Integer.parseInt(TextField0.getText());
                            while(mynewresObj.next()){
                                if(Integer.parseInt(TextField0.getText())==mynewresObj.getInt("IDPartita")){;
                                    esistegia=esistegia+1;
                                }
                            }
                            //mynewresObj.close();
                            if(esistegia!=0){
                                JOptionPane.showMessageDialog(this, "Esiste già una partita identificata dall' id inserito...");
                            }else{
                                if(Ped1.getSelectedItem().toString().equals(Ped2.getSelectedItem().toString())){
                                    JOptionPane.showMessageDialog(this, "Giocatori diversi, diverse pedine");
                                }else{
                                    String sqlCommand1="insert into Partita VALUES ("+TextField0.getText()+",null,0,2,systimestamp,null,null)";                                     Statement mynewStat1= myconObj.createStatement();
                                    mynewStat1.executeUpdate(sqlCommand1);
                                    
                                    PreparedStatement mynewStat2= myconObj.prepareStatement("insert into partecipante values(?,0,?,?)");
                                    mynewStat2.setString(1,Ped1.getSelectedItem().toString());
                                    mynewStat2.setString(2, TextField1.getText());
                                    mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                    System.out.println("Vado a fare l' insert in partecipanti");
                                    mynewStat2.executeUpdate();
                                    mynewStat2.setString(1,Ped2.getSelectedItem().toString());
                                    mynewStat2.setString(2, TextField2.getText());
                                    mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                    mynewStat2.executeUpdate();
                                    CallableStatement  tot= myconObj.prepareCall(" begin inizializzazionepartita("+TextField0.getText()+"); end;");
                                    tot.executeUpdate();
                                    myconObj.close();
                                    this.dispose();
                                    }
                            }
                        }
                    }
                    catch(NumberFormatException e){
                        JOptionPane.showMessageDialog(this, "L'id della partita deve essere un numero");
                    }
                    catch(SQLException e){
                        System.out.println("Catturata una eccezione SQL");
                        e.printStackTrace();
                    }
                }
            } 
        }else{  
            if(numero==" 3"){
                if(TextField3.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(this,"Inserire gli username di tutti i giocatori");
                }else{
                    //controllo che gli username digitati sono diversi
                    if(TextField1.getText().equals(TextField2.getText()) || TextField1.getText().equals(TextField3.getText())||TextField2.getText().equals(TextField3.getText())){
                        //avvisa che gli username dei partecipanti della partita devono essere diversi
                        System.out.println("i text field contengono username uguali !");
                        JOptionPane.showMessageDialog(this, "usare username diversi per diversi giocatori");
                    }else{
                        System.out.println("i text field contengono username diversi !");
                        //controllo se il loro contenuto è valido (presente nella tabella giocatori)
                        try{
                            myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
                            mystatObj=myconObj.createStatement();
                            myresObj=mystatObj.executeQuery("Select count(Username) as conto From Giocatore where username='"+TextField1.getText()+"' or username='"+TextField2.getText()+"' or Username='"+TextField3.getText()+"'");
                            //leggo il risultato
                            while(myresObj.next()){
                                conto=myresObj.getInt("conto");
                            }
                            if(conto!=3){
                                JOptionPane.showMessageDialog(this, "Ci sono giocatori non registrati, provvedere");
                            }else{
                                //Controllo che non esista già una partita con l' id inserito nella pagina corrente
                                Statement mystatObj1= myconObj.createStatement();
                                ResultSet mynewresObj=mystatObj1.executeQuery("Select IDPartita From Partita");
                                Integer.parseInt(TextField0.getText());
                                while(mynewresObj.next()){
                                    if(Integer.parseInt(TextField0.getText())==mynewresObj.getInt("IDPartita")){;
                                        esistegia=esistegia+1;
                                    }
                                }
                                if(esistegia!=0){
                                    JOptionPane.showMessageDialog(this, "Esiste già una partita identificata dall' id inserito...");
                                }else{
                                    if(Ped1.getSelectedItem().toString().equals(Ped2.getSelectedItem().toString()) || Ped1.getSelectedItem().toString().equals(Ped4.getSelectedItem().toString()) || Ped2.getSelectedItem().toString().equals(Ped4.getSelectedItem().toString())){
                                        JOptionPane.showMessageDialog(this, "Giocatori diversi, diverse pedine");
                                    }else{  
                                        String sqlCommand="insert into Partita VALUES ("+TextField0.getText()+",null,0,3,systimestamp,null,null)";
                                        Statement mynewStat=myconObj.createStatement();
                                        mynewStat.executeUpdate(sqlCommand);
                                        mynewStat.close();
                                        PreparedStatement mynewStat2= myconObj.prepareStatement("insert into partecipante values(?,0,?,?)");
                                        
                                        mynewStat2.setString(1,Ped1.getSelectedItem().toString());
                                        mynewStat2.setString(2, TextField1.getText());
                                        mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                        mynewStat2.executeUpdate();
                                        
                                        mynewStat2.setString(1,Ped2.getSelectedItem().toString());
                                        mynewStat2.setString(2, TextField2.getText());
                                        mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                        mynewStat2.executeUpdate();
                                        
                                        mynewStat2.setString(1,Ped4.getSelectedItem().toString());
                                        mynewStat2.setString(2, TextField3.getText());
                                        mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                        mynewStat2.executeUpdate();
                                        mynewStat2.close();
                                        CallableStatement  tot= myconObj.prepareCall(" begin inizializzazionepartita("+TextField0.getText()+"); end;");
                                        tot.executeUpdate();
                                        myconObj.close();
                                        this.dispose();
                                        }
                                }
                            }
                        }
                        catch(NumberFormatException e){
                            JOptionPane.showMessageDialog(this, "L'id della partita deve essere un numero");
                        }
                        catch(SQLException e){
                            System.out.println("Catturata una eccezione SQL");
                            e.printStackTrace();
                        }
                    }
                    
                }
            }else{
                if(numero==" 4"){
                    if(TextField4.getText().trim().isEmpty() || TextField3.getText().trim().isEmpty()){
                        JOptionPane.showMessageDialog(this,"Inserire gli username di tutti i giocatori");
                    }else{
                        //controllo che gli username digitati sono diversi
                        if(TextField1.getText().equals(TextField2.getText()) || TextField1.getText().equals(TextField3.getText())||TextField1.getText().equals(TextField4.getText()) || TextField2.getText().equals(TextField3.getText()) || TextField2.getText().equals(TextField4.getText())||TextField3.getText().equals(TextField4.getText())){
                            //avvisa che gli username dei partecipanti della partita devono essere diversi
                            System.out.println("i text field contengono username uguali !");
                            JOptionPane.showMessageDialog(this, "usare username diversi per diversi giocatori");
                        }else{
                            //controllo se il loro contenuto è valido (presente nella tabella giocatori)
                            try{
                                myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
                                mystatObj=myconObj.createStatement();
                                myresObj=mystatObj.executeQuery("Select count(Username) as conto From Giocatore where username='"+TextField1.getText()+"' or username='"+TextField2.getText()+"' or Username='"+TextField3.getText()+"' or username='"+TextField4.getText()+"'");
                                //leggo il risultato
                                while(myresObj.next()){
                                    conto=myresObj.getInt("conto");
                                }
                                if(conto!=4){
                                    JOptionPane.showMessageDialog(this, "Ci sono giocatori non registrati, provvedere");
                                }else{
                                    //Controllo che non esista già una partita con l' id inserito nella pagina corrente
                                    Statement mystatObj1= myconObj.createStatement();
                                    ResultSet mynewresObj=mystatObj1.executeQuery("Select IDPartita From Partita");
                                    Integer.parseInt(TextField0.getText());
                                    while(mynewresObj.next()){
                                        if(Integer.parseInt(TextField0.getText())==mynewresObj.getInt("IDPartita")){;
                                            esistegia=esistegia+1;
                                        }
                                    }
                                    if(esistegia!=0){
                                        JOptionPane.showMessageDialog(this, "Esiste già una partita identificata dall' id inserito...");
                                    }else{
                                        if(Ped1.getSelectedItem().toString().equals(Ped2.getSelectedItem().toString()) || Ped1.getSelectedItem().toString().equals(Ped4.getSelectedItem().toString()) || Ped1.getSelectedItem().toString().equals(Ped5.getSelectedItem().toString()) || Ped2.getSelectedItem().toString().equals(Ped4.getSelectedItem().toString()) || Ped2.getSelectedItem().toString().equals(Ped5.getSelectedItem().toString()) || Ped4.getSelectedItem().toString().equals(Ped5.getSelectedItem().toString())){
                                            JOptionPane.showMessageDialog(this, "Giocatori diversi, diverse pedine");
                                        }else{ 
                                            String sqlCommand="insert into Partita VALUES ("+TextField0.getText()+",null,0,4,systimestamp,null,null)";
                                            Statement mynewStat=myconObj.createStatement();
                                            mynewStat.executeUpdate(sqlCommand);
                                            mynewStat.close();
                                            PreparedStatement mynewStat2= myconObj.prepareStatement("insert into partecipante values(?,0,?,?)");
                                        
                                            mynewStat2.setString(1,Ped1.getSelectedItem().toString());
                                            mynewStat2.setString(2, TextField1.getText());
                                            mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                            mynewStat2.executeUpdate();
                                        
                                            mynewStat2.setString(1,Ped2.getSelectedItem().toString());
                                            mynewStat2.setString(2, TextField2.getText());
                                            mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                            mynewStat2.executeUpdate();
                                        
                                            mynewStat2.setString(1,Ped4.getSelectedItem().toString());
                                            mynewStat2.setString(2, TextField3.getText());
                                            mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                            mynewStat2.executeUpdate();
                                            
                                            mynewStat2.setString(1,Ped5.getSelectedItem().toString());
                                            mynewStat2.setString(2, TextField4.getText());
                                            mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                            mynewStat2.executeUpdate();                                            
                                            mynewStat2.close();
                                            CallableStatement  tot= myconObj.prepareCall(" begin inizializzazionepartita("+TextField0.getText()+"); end;");
                                            tot.executeUpdate();
                                            myconObj.close();
                                            this.dispose();
                                        }
                                    }
                                }
                            }
                            catch(NumberFormatException e){
                                JOptionPane.showMessageDialog(this, "L'id della partita deve essere un numero");
                            }
                            catch(SQLException e){
                                System.out.println("Catturata una eccezione SQL");
                                e.printStackTrace();
                            }
                        }
                    }
                }else{
                    if(numero==" 5"){
                        if(TextField4.getText().trim().isEmpty() || TextField3.getText().trim().isEmpty() || TextField5.getText().trim().isEmpty()){
                            JOptionPane.showMessageDialog(this,"Inserire gli username di tutti i giocatori");
                        }else{
                            //controllo che gli username digitati sono diversi
                            if(TextField1.getText().equals(TextField2.getText()) || TextField1.getText().equals(TextField3.getText())||TextField1.getText().equals(TextField4.getText()) || TextField1.getText().equals(TextField5.getText()) || TextField2.getText().equals(TextField3.getText())||TextField2.getText().equals(TextField4.getText()) || TextField2.getText().equals(TextField5.getText()) || TextField3.getText().equals(TextField4.getText())||TextField3.getText().equals(TextField5.getText()) ||TextField4.getText().equals(TextField5.getText())){
                                //avvisa che gli username dei partecipanti della partita devono essere diversi
                                System.out.println("i text field contengono username uguali !");
                                JOptionPane.showMessageDialog(this, "usare username diversi per diversi giocatori");
                            }else{
                                //controllo se il loro contenuto è valido (presente nella tabella giocatori)
                                try{
                                    myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
                                    mystatObj=myconObj.createStatement();
                                    myresObj=mystatObj.executeQuery("Select count(Username) as conto From Giocatore where username='"+TextField1.getText()+"' or username='"+TextField2.getText()+"' or Username='"+TextField3.getText()+"' or username='"+TextField4.getText()+"' or username='"+TextField5.getText()+"'");
                                    //leggo il risultato
                                    while(myresObj.next()){
                                        conto=myresObj.getInt("conto");
                                    }
                                    if(conto!=5){
                                        JOptionPane.showMessageDialog(this, "Ci sono giocatori non registrati, provvedere");
                                    }else{
                                        //Controllo che non esista già una partita con l' id inserito nella pagina corrente
                                        Statement mystatObj1= myconObj.createStatement();
                                        ResultSet mynewresObj=mystatObj1.executeQuery("Select IDPartita From Partita");
                                        Integer.parseInt(TextField0.getText());
                                        while(mynewresObj.next()){
                                            if(Integer.parseInt(TextField0.getText())==mynewresObj.getInt("IDPartita")){;
                                                esistegia=esistegia+1;
                                            }
                                        }
                                        if(esistegia!=0){
                                            JOptionPane.showMessageDialog(this, "Esiste già una partita identificata dall' id inserito...");
                                        }else{
                                            if(Ped1.getSelectedItem().toString().equals(Ped2.getSelectedItem().toString()) || Ped1.getSelectedItem().toString().equals(Ped4.getSelectedItem().toString()) || Ped1.getSelectedItem().toString().equals(Ped5.getSelectedItem().toString()) || Ped1.getSelectedItem().toString().equals(Ped6.getSelectedItem().toString()) || Ped2.getSelectedItem().toString().equals(Ped4.getSelectedItem().toString()) || Ped2.getSelectedItem().toString().equals(Ped5.getSelectedItem().toString()) || Ped2.getSelectedItem().toString().equals(Ped6.getSelectedItem().toString()) || Ped4.getSelectedItem().toString().equals(Ped5.getSelectedItem().toString()) || Ped4.getSelectedItem().toString().equals(Ped6.getSelectedItem().toString()) || Ped5.getSelectedItem().toString().equals(Ped6.getSelectedItem().toString())){
                                                    JOptionPane.showMessageDialog(this, "Giocatori diversi, diverse pedine");
                                            }else{
                                                String sqlCommand="insert into Partita VALUES ("+TextField0.getText()+",null,0,5,systimestamp,null,null)";
                                                Statement mynewStat=myconObj.createStatement();
                                                mynewStat.executeUpdate(sqlCommand);
                                                mynewStat.close();
                                                
                                                PreparedStatement mynewStat2= myconObj.prepareStatement("insert into partecipante values(?,0,?,?)");
                                        
                                                mynewStat2.setString(1,Ped1.getSelectedItem().toString());
                                                mynewStat2.setString(2, TextField1.getText());
                                                mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                                mynewStat2.executeUpdate();
                                        
                                                mynewStat2.setString(1,Ped2.getSelectedItem().toString());
                                                mynewStat2.setString(2, TextField2.getText());
                                                mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                                mynewStat2.executeUpdate();
                                        
                                                mynewStat2.setString(1,Ped4.getSelectedItem().toString());
                                                mynewStat2.setString(2, TextField3.getText());
                                                mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                                mynewStat2.executeUpdate();
                                            
                                                mynewStat2.setString(1,Ped5.getSelectedItem().toString());
                                                mynewStat2.setString(2, TextField4.getText());
                                                mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                                mynewStat2.executeUpdate(); 
                                                
                                                mynewStat2.setString(1,Ped6.getSelectedItem().toString());
                                                mynewStat2.setString(2, TextField5.getText());
                                                mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                                mynewStat2.executeUpdate();
                                                
                                                mynewStat2.close();
                                                CallableStatement  tot= myconObj.prepareCall(" begin inizializzazionepartita("+TextField0.getText()+"); end;");
                                                tot.executeUpdate();
                                                myconObj.close();
                                                this.dispose();
                                            }
                                        }
                                    }
                                }
                                catch(NumberFormatException e){
                                    JOptionPane.showMessageDialog(this, "L'id della partita deve essere un numero");
                                }
                                catch(SQLException e){
                                    System.out.println("Catturata una eccezione SQL");
                                    e.printStackTrace();
                                }
                            }
                        }
                    }else{
                        if(numero==" 6"){ 
                            if(TextField4.getText().trim().isEmpty() || TextField3.getText().trim().isEmpty() || TextField5.getText().trim().isEmpty() || TextField6.getText().trim().isEmpty()){
                                JOptionPane.showMessageDialog(this,"Inserire gli username di tutti i giocatori");
                            }else{
                                //controllo che gli username digitati sono diversi
                                if(TextField1.getText().equals(TextField2.getText()) || TextField1.getText().equals(TextField3.getText())||TextField1.getText().equals(TextField4.getText()) || TextField1.getText().equals(TextField5.getText()) ||TextField1.getText().equals(TextField6.getText())|| TextField2.getText().equals(TextField3.getText())||TextField2.getText().equals(TextField4.getText()) || TextField2.getText().equals(TextField5.getText()) || TextField2.getText().equals(TextField6.getText()) || TextField3.getText().equals(TextField4.getText())||TextField3.getText().equals(TextField5.getText()) || TextField3.getText().equals(TextField6.getText()) ||TextField4.getText().equals(TextField5.getText()) || TextField4.getText().equals(TextField6.getText())||TextField5.getText().equals(TextField6.getText())){
                                    //avvisa che gli username dei partecipanti della partita devono essere diversi
                                    System.out.println("i text field contengono username uguali !");
                                    JOptionPane.showMessageDialog(this, "usare username diversi per diversi giocatori");
                                }else{
                                    //controllo se il loro contenuto è valido (presente nella tabella giocatori)
                                    try{
                                        myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
                                        mystatObj=myconObj.createStatement();
                                        myresObj=mystatObj.executeQuery("Select count(Username) as conto From Giocatore where username='"+TextField1.getText()+"' or username='"+TextField2.getText()+"' or Username='"+TextField3.getText()+"' or username='"+TextField4.getText()+"' or username='"+TextField5.getText()+"' or username='"+TextField6.getText()+"'");
                                        //leggo il risultato
                                        while(myresObj.next()){
                                            conto=myresObj.getInt("conto");
                                        }
                                        if(conto!=6){
                                            JOptionPane.showMessageDialog(this, "Ci sono giocatori non registrati, provvedere");
                                        }else{
                                            //Controllo che non esista già una partita con l' id inserito nella pagina corrente
                                            Statement mystatObj1= myconObj.createStatement();
                                            ResultSet mynewresObj=mystatObj1.executeQuery("Select IDPartita From Partita");
                                            Integer.parseInt(TextField0.getText());
                                            while(mynewresObj.next()){
                                                if(Integer.parseInt(TextField0.getText())==mynewresObj.getInt("IDPartita")){;
                                                    esistegia=esistegia+1;
                                                }
                                            }
                                            if(esistegia!=0){
                                                JOptionPane.showMessageDialog(this, "Esiste già una partita identificata dall' id inserito...");
                                            }else{
                                                if(Ped1.getSelectedItem().toString().equals(Ped2.getSelectedItem().toString()) || Ped1.getSelectedItem().toString().equals(Ped4.getSelectedItem().toString()) || Ped1.getSelectedItem().toString().equals(Ped5.getSelectedItem().toString()) || Ped1.getSelectedItem().toString().equals(Ped6.getSelectedItem().toString()) || Ped1.getSelectedItem().toString().equals(Ped7.getSelectedItem().toString()) || Ped2.getSelectedItem().toString().equals(Ped4.getSelectedItem().toString()) || Ped2.getSelectedItem().toString().equals(Ped5.getSelectedItem().toString()) || Ped2.getSelectedItem().toString().equals(Ped6.getSelectedItem().toString()) || Ped2.getSelectedItem().toString().equals(Ped7.getSelectedItem().toString()) || Ped4.getSelectedItem().toString().equals(Ped5.getSelectedItem().toString()) || Ped4.getSelectedItem().toString().equals(Ped6.getSelectedItem().toString()) || Ped4.getSelectedItem().toString().equals(Ped7.getSelectedItem().toString()) || Ped5.getSelectedItem().toString().equals(Ped6.getSelectedItem().toString()) || Ped5.getSelectedItem().toString().equals(Ped7.getSelectedItem().toString()) || Ped6.getSelectedItem().toString().equals(Ped7.getSelectedItem().toString())){
                                                    JOptionPane.showMessageDialog(this, "Giocatori diversi, diverse pedine");
                                                }else{
                                                    String sqlCommand="insert into Partita VALUES ("+TextField0.getText()+",null,0,6,systimestamp,null,null)";
                                                    Statement mynewStat=myconObj.createStatement();
                                                    mynewStat.executeUpdate(sqlCommand);
                                                    mynewStat.close();
                                                
                                                    PreparedStatement mynewStat2= myconObj.prepareStatement("insert into partecipante values(?,0,?,?)");
                                        
                                                    mynewStat2.setString(1,Ped1.getSelectedItem().toString());
                                                    mynewStat2.setString(2, TextField1.getText());
                                                    mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                                    mynewStat2.executeUpdate();
                                        
                                                    mynewStat2.setString(1,Ped2.getSelectedItem().toString());
                                                    mynewStat2.setString(2, TextField2.getText());
                                                    mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                                    mynewStat2.executeUpdate();
                                        
                                                    mynewStat2.setString(1,Ped4.getSelectedItem().toString());
                                                    mynewStat2.setString(2, TextField3.getText());
                                                    mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                                    mynewStat2.executeUpdate();
                                            
                                                    mynewStat2.setString(1,Ped5.getSelectedItem().toString());
                                                    mynewStat2.setString(2, TextField4.getText());
                                                    mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                                    mynewStat2.executeUpdate(); 
                                                
                                                    mynewStat2.setString(1,Ped6.getSelectedItem().toString());
                                                    mynewStat2.setString(2, TextField5.getText());
                                                    mynewStat2.setInt(3,Integer.parseInt(TextField0.getText()));
                                                    mynewStat2.executeUpdate();
                                                
                                                    mynewStat2.close();
                                                    CallableStatement  tot= myconObj.prepareCall(" begin inizializzazionepartita("+TextField0.getText()+"); end;");
                                                    tot.executeUpdate();
                                                    myconObj.close();
                                                    this.dispose();
                                                }
                                            }
                                        }
                                    }
                                    catch(NumberFormatException e){
                                        JOptionPane.showMessageDialog(this, "L'id della partita deve essere un numero");
                                    }
                                    catch(SQLException e){
                                        System.out.println("Catturata una eccezione SQL");
                                        e.printStackTrace();
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        //verifico se all' apertura di un message dialog, va' poi avanti e stampa:
        System.out.println("Fine ''Creazione''..."); //sì va' avanti   
        
    }//GEN-LAST:event_CreateButtonActionPerformed

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
        Window parentWindow = SwingUtilities.windowForComponent(RegisterButton);
        JDialog dialog = new JDialog(parentWindow);
        //dialog.setLocationRelativeTo(RegisterButton);
        dialog.setModal(true);
        dialog.add(newPane("Label in dialog"));
        dialog.pack();
        dialog.setVisible(true);
    }//GEN-LAST:event_RegisterButtonActionPerformed

    private void Ped4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ped4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Ped4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreazionePartita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreazionePartita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreazionePartita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreazionePartita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreazionePartita dialog = new CreazionePartita(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateButton;
    private javax.swing.JLabel Label1;
    private javax.swing.JLabel Label3;
    private javax.swing.JLabel Label4;
    private javax.swing.JLabel Label5;
    private javax.swing.JComboBox<String> NumPlayersBox;
    private javax.swing.JComboBox<String> Ped1;
    private javax.swing.JComboBox<String> Ped2;
    private javax.swing.JComboBox<String> Ped3;
    private javax.swing.JComboBox<String> Ped4;
    private javax.swing.JComboBox<String> Ped5;
    private javax.swing.JComboBox<String> Ped6;
    private javax.swing.JComboBox<String> Ped7;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JInternalFrame Registratore;
    private javax.swing.JTextField TextField0;
    private javax.swing.JTextField TextField1;
    private javax.swing.JTextField TextField2;
    private javax.swing.JTextField TextField3;
    private javax.swing.JTextField TextField4;
    private javax.swing.JTextField TextField5;
    private javax.swing.JTextField TextField6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JLabel label2;
    private javax.swing.JButton okButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
