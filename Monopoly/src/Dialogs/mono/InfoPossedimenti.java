/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogs.mono;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author marco
 */
public class InfoPossedimenti extends javax.swing.JDialog {
    int IDPartita;
    String Pedina;
    Connection myconObj=null;
    /**
     * Creates new form InfoPossedimenti
     */
    public InfoPossedimenti(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void setid(int m){
        IDPartita=m;
    }
    public void setpedina(String m){
        Pedina=m;
        selectionall();
        selectionallcarte();
        intro1.setText("I contratti posseduti da "+ Pedina+ " nella partita "+IDPartita+" sono i seguenti:");
        intro2.setText("Le carte possedute da "+ Pedina+" nella partita "+IDPartita+" sono le seguenti:");
    }
    public void selectionall(){
        DefaultTableModel model=(DefaultTableModel)TableContratti.getModel();
        model.setRowCount(0);
        TableColumnModel columnModel= TableContratti.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(200);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(50);
        try{
            System.out.println("La pedina selezionata Ã¨: "+Pedina);
            myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
            Statement mystatObj = myconObj.createStatement();
            System.out.println("Eseguo primo statement");
            ResultSet allcontratti=mystatObj.executeQuery("select Nome, ValoreIpotecario, PrezzoLavori,Colore,Posizione from contratti where IdPartita="+IDPartita+" and Pedina='"+Pedina+"'");
            System.out.println("Fatta prima query");
            Statement mystat1Obj;
            ResultSet alledi;
            System.out.println("Sto per entrare nel while");
            while(allcontratti.next()){
                //mi serve trovare gli edifici sul contratto;
                mystat1Obj=myconObj.createStatement();
                alledi=mystat1Obj.executeQuery("SELECT Count(*) as conto FROM Contratti,Costruisce WHERE contratti.idpartita=costruisce.idpartita and contratti.IdPartita="+IDPartita+" and contratti.Pedina='"+Pedina+"' and NomeContratto='"+allcontratti.getString("Nome")+"'");
                if(alledi.next())
                    model.addRow(new Object[]{allcontratti.getString("Nome"),allcontratti.getInt("ValoreIpotecario"),allcontratti.getInt("PrezzoLavori"),allcontratti.getString("Colore"),allcontratti.getInt("Posizione"),alledi.getInt("conto")});
                mystat1Obj.close();
            } 
            System.out.println("Sono uscito dal while");
            myconObj.close();
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
    public void selectionallcarte(){
        DefaultTableModel model=(DefaultTableModel)TableSpeciali.getModel();
        model.setRowCount(0);
        TableColumnModel columnModel= TableSpeciali.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(500);
        columnModel.getColumn(2).setPreferredWidth(60);
        try{
            myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
            Statement mystat1Obj = myconObj.createStatement();
            Statement mystat2Obj = myconObj.createStatement();
            ResultSet carte=mystat1Obj.executeQuery("SELECT NumeroCarta, Descrizione,ImpOProb FROM carta WHERE IDPartita="+IDPartita+"and Pedina='"+Pedina+"' ORDER BY NumeroCarta,ImpOProb");
            while(carte.next()){
                model.addRow(new Object[]{carte.getInt("NumeroCarta"),carte.getString("Descrizione"),carte.getString("ImpOProb")});
            }
            System.out.println("chiudo connessione");
            myconObj.close();
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        intro1 = new javax.swing.JLabel();
        intro2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableContratti = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableSpeciali = new javax.swing.JTable();
        DeleteButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        ContrattoField = new javax.swing.JTextField();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Possedimenti");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        TableContratti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "V. ipotecario", "Costo Lavori", "Colore", "Posizione", "Edifici"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TableContratti);
        if (TableContratti.getColumnModel().getColumnCount() > 0) {
            TableContratti.getColumnModel().getColumn(0).setResizable(false);
            TableContratti.getColumnModel().getColumn(1).setResizable(false);
            TableContratti.getColumnModel().getColumn(2).setResizable(false);
            TableContratti.getColumnModel().getColumn(3).setResizable(false);
            TableContratti.getColumnModel().getColumn(4).setResizable(false);
            TableContratti.getColumnModel().getColumn(5).setResizable(false);
        }

        TableSpeciali.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Descrizione", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TableSpeciali);
        if (TableSpeciali.getColumnModel().getColumnCount() > 0) {
            TableSpeciali.getColumnModel().getColumn(0).setResizable(false);
            TableSpeciali.getColumnModel().getColumn(1).setResizable(false);
            TableSpeciali.getColumnModel().getColumn(2).setResizable(false);
        }

        DeleteButton.setBackground(new java.awt.Color(255, 255, 255));
        DeleteButton.setText("X");
        DeleteButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        AddButton.setText("+");
        AddButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(intro1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(ContrattoField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(intro2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DeleteButton)
                        .addComponent(AddButton)
                        .addComponent(ContrattoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(intro1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(intro2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        DefaultTableModel model=(DefaultTableModel) TableContratti.getModel();
        String Nome=model.getValueAt(TableContratti.getSelectedRow(),0).toString();
        
        try{
            if(model.getValueAt(TableContratti.getSelectedRow(),0).toString()!=null){
                myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
                Statement state=myconObj.createStatement();
                ResultSet maxturno = state.executeQuery("select max(turno) as maxturn from logpartecipante where idpartita="+IDPartita+" and pedina='"+Pedina+"'");
                maxturno.next();
                int m=maxturno.getInt("maxturn");
                Statement lastlogstat=myconObj.createStatement();
                ResultSet lastlog = lastlogstat.executeQuery( "select partecipante.pedina as Pedina,partecipante.username as Username,logpartecipante.posizione as Posizione,logpartecipante.saldo as Saldo,logpartecipante.inprigione as Prigioniero,partecipante.eliminato as Eliminato, logpartecipante.turno as Turno FROM logpartecipante, partecipante where partecipante.idpartita=logpartecipante.idpartita and logpartecipante.idpartita="+IDPartita+" and logpartecipante.pedina=partecipante.pedina and partecipante.pedina='"+Pedina+"' and logpartecipante.turno="+m+"and logpartecipante.ordine in (select max(ordine) from logpartecipante where idpartita="+IDPartita+"and pedina='"+Pedina+"' and turno="+m+")");
                lastlog.next();
                state.close();
                
                Statement p=myconObj.createStatement();
                ResultSet prez=p.executeQuery("Select Prezzo FROM Contratti WHERE idpartita="+IDPartita+"and Nome='"+Nome+"'");
                prez.next();
                int prezzo=prez.getInt("Prezzo");
                p.close();
                
                String sqlCommand="UPDATE LogPartecipante SET Saldo=? WHERE IDPartita= ? and pedina=? and turno=?";
                PreparedStatement  tot= myconObj.prepareStatement(sqlCommand);
                tot.setInt(1,lastlog.getInt("Saldo")+prezzo);
                tot.setInt(2,IDPartita);
                tot.setString(3,Pedina);
                tot.setInt(4,lastlog.getInt("Turno"));
       
                tot.executeUpdate();
                tot.close();
                Statement toti=myconObj.createStatement();
                toti.executeUpdate("UPDATE Contratti SET Pedina=null, Acquistata=0 WHERE Nome='"+Nome+"' and IDPartita="+IDPartita);
                System.out.println("Il contratto Ã¨ stato assegnato alla banca :) ");
                toti.close();
                selectionall();
            }
        }
            catch(SQLException e){
                e.printStackTrace();
            }
            catch(Exception e){JOptionPane.showMessageDialog(this,"Selezionare un partecipante");}
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        //Controllo se il field Ã¨ vuoto
        if(!ContrattoField.getText().trim().isEmpty()){
            String Nome= ContrattoField.getText();
            try{
                myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
                //controllo se il contratto esiste
                Statement pi=myconObj.createStatement();
                System.out.println("UNO");
                ResultSet pie=pi.executeQuery("Select Nome From Contratti Where Nome='"+ContrattoField.getText()+"' and IDPartita="+IDPartita);
                if(pie.next()){
                    //controllo se il contratto giÃ  appertiene a qualcuno
                    Statement pa=myconObj.createStatement();
                    ResultSet pae=pa.executeQuery("SELECT Pedina FROM Contratti WHERE IDPartita="+IDPartita+" and Nome='"+ContrattoField.getText()+"'");
                    System.out.println("DUE");
                    if(pae.next()){
                        if(pae.getString("Pedina")==null){
                            System.out.println("TRE");
                            //non dovrebbe appartenere a nessuno
                            System.out.println("Infatti la pedina Ã¨: "+ pae.getString("Pedina"));
                            System.out.println("La pedina a cuis to assegnando "+ContrattoField.getText()+"Ã¨ "+Pedina);
                            Statement toti=myconObj.createStatement();
                            toti.executeUpdate("UPDATE Contratti SET Pedina='"+Pedina+"', IDPartita1="+IDPartita+" WHERE Nome='"+ContrattoField.getText()+"' and IDPartita="+IDPartita);
                            System.out.println("QUATTRO");
                            System.out.println("Il contratto Ã¨ stato assegnato alla banca :) ");
                            toti.close();
                            pae.close();
                            selectionall();
                        }
                    }else{
                        JOptionPane.showMessageDialog(this,"Inserire un contratto che non appartiene giÃ  a qualcuno");
                        System.out.println("Infatti la pedina Ã¨: "+ pae.getString("Pedina"));

                    }
                    selectionall();
                }else{
                    JOptionPane.showMessageDialog(this,"Inserire un contratto esistente");
                }
            }catch(SQLException e){e.printStackTrace();}
        }else{
            JOptionPane.showMessageDialog(this,"Inserire un contratto da assegnare alla pedina.");
        }
    }//GEN-LAST:event_AddButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InfoPossedimenti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InfoPossedimenti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InfoPossedimenti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfoPossedimenti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InfoPossedimenti dialog = new InfoPossedimenti(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTextField ContrattoField;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTable TableContratti;
    private javax.swing.JTable TableSpeciali;
    private javax.swing.JLabel intro1;
    private javax.swing.JLabel intro2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
