package Frames.mono;

import Dialogs.mono.CreazioneMossa;
import Dialogs.mono.InfoPossedimenti;
import Dialogs.mono.InfoLogPagamenti;
import Dialogs.mono.InfoStoredLogs;
import java.awt.*;
import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;


public class TerzaPagina extends javax.swing.JFrame {
    Connection myconObj=null;
    Statement mystatObj=null;
    ResultSet myresObj=null;
    private DefaultTableModel model;
    int IDPartita;
    private SecondaPagina page;
    /**
     * Creates new form TerzaPagina
     */
    public TerzaPagina() {
        initComponents();
    }
    
    public void setIDPartita(int value){
        IDPartita=value;
        selectionall();
        selectionallmosse();
    }
    
    public void setPage(SecondaPagina pagina){
        page=pagina;
        int m=page.getIDpartita();
        IDLabel.setText(Integer.toString(m));
    }
    public void selectionall(){
        DefaultTableModel model=(DefaultTableModel)TablePartecipanti.getModel();
        model.setRowCount(0);
        try{
        myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
        Statement mystat1Obj = myconObj.createStatement();
        Statement mystat2Obj= myconObj.createStatement();
        Statement mystat3Obj= myconObj.createStatement();
        
        ResultSet pedine=mystat1Obj.executeQuery("SELECT pedina FROM partecipante WHERE idpartita="+IDPartita);

        while(pedine.next()){
            String n=pedine.getString("pedina");
            ResultSet maxturno = mystat2Obj.executeQuery("select max(turno) as maxturn from logpartecipante where idpartita="+IDPartita+" and pedina='"+n+"'");
            maxturno.next();
            int m=maxturno.getInt("maxturn");
            ResultSet lastlog = mystat3Obj.executeQuery( "select partecipante.pedina as Pedina,partecipante.username as Username,logpartecipante.posizione as Posizione,logpartecipante.saldo as Saldo,logpartecipante.inprigione as Prigioniero,partecipante.eliminato as Eliminato FROM logpartecipante, partecipante where partecipante.idpartita=logpartecipante.idpartita and logpartecipante.idpartita="+IDPartita+" and logpartecipante.pedina=partecipante.pedina and partecipante.pedina='"+n+"' and logpartecipante.turno="+m+"and logpartecipante.ordine in (select max(ordine) from logpartecipante where idpartita="+IDPartita+"and pedina='"+n+"' and turno="+m+")");            
            lastlog.next();
            model.addRow(new Object[]{lastlog.getString("Pedina"),lastlog.getString("Username"),lastlog.getInt("Posizione"),lastlog.getInt("Saldo"),lastlog.getInt("prigioniero"),lastlog.getInt("eliminato")});
        }
        myconObj.close();
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
    public void selectionallmosse(){
        DefaultTableModel model=(DefaultTableModel)TableMosse.getModel();
        model.setRowCount(0);
        try{
            myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
            Statement mystatObj = myconObj.createStatement();
            ResultSet allmosse=mystatObj.executeQuery("select Pedina, DaPosizione, APosizione,Dado1,Dado2,Turno, Sezione from mossa where IdPartita1="+IDPartita+" and Turno<>0 Order by Turno,Pedina, Sezione");
            while(allmosse.next()){
                model.addRow(new Object[]{allmosse.getString("Pedina"),allmosse.getInt("Turno"),allmosse.getInt("Sezione"),allmosse.getInt("DaPosizione"),allmosse.getInt("APosizione"),allmosse.getInt("Dado1"),allmosse.getInt("Dado2")});
            } 
            myconObj.close();
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Inidica1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablePartecipanti = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableMosse = new javax.swing.JTable();
        Indicia2 = new javax.swing.JLabel();
        Label = new javax.swing.JLabel();
        IDLabel = new javax.swing.JLabel();
        PedinaLabel = new javax.swing.JLabel();
        TurnoLabel = new javax.swing.JLabel();
        SezioneLabel = new javax.swing.JLabel();
        PedinaField = new javax.swing.JTextField();
        TurnoField = new javax.swing.JTextField();
        SezioneField = new javax.swing.JTextField();
        AddButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        ApprofondButton = new javax.swing.JButton();
        toLogPag = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setTitle("Partita in corso...");

        Inidica1.setFont(new java.awt.Font("Myanmar Text", 0, 14)); // NOI18N
        Inidica1.setText("Lo stato dei partecipanti:");

        TablePartecipanti.setFont(new java.awt.Font("Myanmar Text", 0, 12)); // NOI18N
        TablePartecipanti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pedina", "Username", "Posizione", "Saldo", "Prigioniero", "Eliminato"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablePartecipanti);
        if (TablePartecipanti.getColumnModel().getColumnCount() > 0) {
            TablePartecipanti.getColumnModel().getColumn(0).setResizable(false);
            TablePartecipanti.getColumnModel().getColumn(1).setResizable(false);
            TablePartecipanti.getColumnModel().getColumn(2).setResizable(false);
            TablePartecipanti.getColumnModel().getColumn(3).setResizable(false);
            TablePartecipanti.getColumnModel().getColumn(4).setResizable(false);
            TablePartecipanti.getColumnModel().getColumn(5).setResizable(false);
        }

        TableMosse.setFont(new java.awt.Font("Myanmar Text", 0, 12)); // NOI18N
        TableMosse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pedina", "Turno", "Sezione", "Da posizione", "A posizione", "Dado1", "Dado2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableMosse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseClickedTableMossa(evt);
            }
        });
        jScrollPane2.setViewportView(TableMosse);
        if (TableMosse.getColumnModel().getColumnCount() > 0) {
            TableMosse.getColumnModel().getColumn(0).setResizable(false);
            TableMosse.getColumnModel().getColumn(1).setResizable(false);
            TableMosse.getColumnModel().getColumn(2).setResizable(false);
            TableMosse.getColumnModel().getColumn(3).setResizable(false);
            TableMosse.getColumnModel().getColumn(4).setResizable(false);
            TableMosse.getColumnModel().getColumn(5).setResizable(false);
        }

        Indicia2.setFont(new java.awt.Font("Myanmar Text", 0, 14)); // NOI18N
        Indicia2.setText("Mosse:");

        Label.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        Label.setText("ID partita:");

        IDLabel.setFont(new java.awt.Font("Sitka Display", 1, 18)); // NOI18N
        IDLabel.setForeground(new java.awt.Color(255, 102, 0));

        PedinaLabel.setText("Pedina:");

        TurnoLabel.setText("Turno:");

        SezioneLabel.setText("Sezione:");

        PedinaField.setEditable(false);

        TurnoField.setEditable(false);

        SezioneField.setEditable(false);

        AddButton.setText("+");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("-");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        ApprofondButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Lente.png"))); // NOI18N
        ApprofondButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ApprofondButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApprofondButtonActionPerformed(evt);
            }
        });

        toLogPag.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/PagamentiIcon.png"))); // NOI18N
        toLogPag.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        toLogPag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toLogPagActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/OldLogIcon.png"))); // NOI18N
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Indicia2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Inidica1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ApprofondButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(toLogPag)
                        .addContainerGap(322, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AddButton)
                        .addGap(53, 53, 53))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PedinaLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PedinaField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(TurnoLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TurnoField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SezioneLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SezioneField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DeleteButton)
                                .addGap(8, 8, 8))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Label)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(IDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(4, 4, 4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Inidica1)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ApprofondButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(11, 11, 11)))
                            .addComponent(toLogPag, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(Indicia2)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PedinaLabel)
                    .addComponent(TurnoLabel)
                    .addComponent(SezioneLabel)
                    .addComponent(PedinaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SezioneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteButton)
                    .addComponent(TurnoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mouseClickedTableMossa(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClickedTableMossa
        DefaultTableModel model=(DefaultTableModel) TableMosse.getModel();
        PedinaField.setText(model.getValueAt(TableMosse.getSelectedRow(),0).toString());
        TurnoField.setText(model.getValueAt(TableMosse.getSelectedRow(),1).toString());
        SezioneField.setText(model.getValueAt(TableMosse.getSelectedRow(),2).toString());
    }//GEN-LAST:event_mouseClickedTableMossa

    //permetto l' eliminazione solo delle ultime mosse
    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        int i=0;
        
        int APosizione=0,DaPosizione=0,IDPartita1=IDPartita,Turno=0,Sezione=0;
        String Pedina="",TipoMossa="";
        try{
            //instaurata la connessione per l'interazione col datbase
            myconObj=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Utente","12345");
            myconObj.setAutoCommit(false);
            System.out.println("Controllo se la mossa è l' ultima inserita");
            
            //mi serve controllare se la mossa che si sta tentando di eliminare è l' ultima mossa a tal proposito, trovo l' ultima mossa 
            Statement ult=myconObj.createStatement();
            ResultSet ultimossa= ult.executeQuery("Select * From Mossa Where IDPartita1="+IDPartita);
            while(ultimossa.next()){
                Turno= ultimossa.getInt("Turno");
                Pedina=ultimossa.getString("Pedina");
                DaPosizione=ultimossa.getInt("Daposizione");
                APosizione=ultimossa.getInt("APosizione");
                TipoMossa=ultimossa.getString("TipoMossa");
                Sezione=ultimossa.getInt("Sezione");
                i=i+1;
            }
            
            System.out.println("La mosse sono:"+i);
            System.out.println("L' ultima partita ha turno="+Turno +",Pedina="+Pedina+" e Sezione="+Sezione);
            if( (Turno==Integer.parseInt(TurnoField.getText()))&& Pedina.equals(PedinaField.getText()) && (Sezione==Integer.parseInt(SezioneField.getText())) ){
               
                System.out.println("Procedo con l' eliminazione");
                //Comando per l'eliminazione della mossa dal database
                String sqlcommand="Delete from mossa where IDPartita1="+IDPartita+" and pedina='"+PedinaField.getText()+"' and turno="+TurnoField.getText()+"and sezione="+SezioneField.getText();
                Statement mynewstat=myconObj.createStatement();
                mynewstat.executeUpdate(sqlcommand);
                mynewstat.close();
                System.out.println("Ho eliminato da mossa");
                String sqlCommand="UPDATE LogPartecipante SET Saldo=? , Posizione= ? WHERE IDPartita= ? and pedina=? and turno=?";
                CallableStatement  tot= myconObj.prepareCall(" begin updatelogs(?,?,?,?,?,?,?); end;");
                tot.setInt(1,APosizione);
                tot.setInt(2,DaPosizione);
                tot.setInt(3,IDPartita);
                tot.setString(4,PedinaField.getText());
                tot.setInt(5,Integer.parseInt(TurnoField.getText()));
                tot.setString(6,TipoMossa);
                tot.setInt(7,Sezione);
                tot.executeUpdate();
                tot.close();
                
                myconObj.close();
            }else
                JOptionPane.showMessageDialog(this,"Si può eliminare solo l' ultima mossa.");
        }catch(SQLException e){
            e.printStackTrace();
        }
        selectionall();
        selectionallmosse();   
        PedinaField.setText("");
        TurnoField.setText("");
        SezioneField.setText("");
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        CreazioneMossa cm= new CreazioneMossa(this, true);
        System.out.println("Terza pagina assegna ID="+IDPartita);
        cm.setIDPartita(IDPartita);
        cm.setVisible(true);
        selectionall();
        selectionallmosse();
    }//GEN-LAST:event_AddButtonActionPerformed

    private void ApprofondButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApprofondButtonActionPerformed
        DefaultTableModel model=(DefaultTableModel) TablePartecipanti.getModel();
        try{
            if(model.getValueAt(TablePartecipanti.getSelectedRow(),0).toString()!=null){
                InfoPossedimenti ab= new InfoPossedimenti(this,true);
                ab.setid(IDPartita);
                ab.setpedina(model.getValueAt(TablePartecipanti.getSelectedRow(),0).toString());
                ab.setLocationRelativeTo(ApprofondButton);
                ab.setVisible(true);
                selectionall();
            }
        }catch(Exception e){JOptionPane.showMessageDialog(this,"Selezionare un partecipante");}
    }//GEN-LAST:event_ApprofondButtonActionPerformed

    private void toLogPagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toLogPagActionPerformed
        InfoLogPagamenti inf= new InfoLogPagamenti(this,true);
        inf.setid(IDPartita);
        inf.setVisible(true);
    }//GEN-LAST:event_toLogPagActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        InfoStoredLogs n=new InfoStoredLogs(this,true);
        n.setid(IDPartita);
        n.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TerzaPagina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TerzaPagina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TerzaPagina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TerzaPagina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TerzaPagina().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton ApprofondButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JLabel IDLabel;
    private javax.swing.JLabel Indicia2;
    private javax.swing.JLabel Inidica1;
    private javax.swing.JLabel Label;
    private javax.swing.JTextField PedinaField;
    private javax.swing.JLabel PedinaLabel;
    private javax.swing.JTextField SezioneField;
    private javax.swing.JLabel SezioneLabel;
    private javax.swing.JTable TableMosse;
    private javax.swing.JTable TablePartecipanti;
    private javax.swing.JTextField TurnoField;
    private javax.swing.JLabel TurnoLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton toLogPag;
    // End of variables declaration//GEN-END:variables
}
